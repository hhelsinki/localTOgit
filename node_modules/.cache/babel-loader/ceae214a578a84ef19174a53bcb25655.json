{"ast":null,"code":"const Token = require(\"./token\");\n\nconst isBase64 = require(\"is-base64\");\n\nfunction Config(options) {\n  options = options || {};\n  let useTLS = false;\n\n  if (options.useTLS !== undefined && options.encrypted !== undefined) {\n    throw new Error(\"Cannot set both `useTLS` and `encrypted` configuration options\");\n  } else if (options.useTLS !== undefined) {\n    useTLS = options.useTLS;\n  } else if (options.encrypted !== undefined) {\n    // `encrypted` deprecated in favor of `useTLS`\n    console.warn(\"`encrypted` option is deprecated in favor of `useTLS`\");\n    useTLS = options.encrypted;\n  }\n\n  this.scheme = options.scheme || (useTLS ? \"https\" : \"http\");\n  this.port = options.port;\n  this.appId = options.appId;\n  this.token = new Token(options.key, options.secret);\n  this.timeout = options.timeout;\n  this.agent = options.agent; // Handle deprecated raw 32 byte string as key\n\n  if (options.encryptionMasterKey !== undefined) {\n    if (options.encryptionMasterKeyBase64 !== undefined) {\n      throw new Error(\"Do not specify both encryptionMasterKey and encryptionMasterKeyBase64. \" + \"encryptionMasterKey is deprecated, please specify only encryptionMasterKeyBase64.\");\n    }\n\n    console.warn(\"`encryptionMasterKey` option is deprecated in favor of `encryptionMasterKeyBase64`\");\n\n    if (typeof options.encryptionMasterKey !== \"string\") {\n      throw new Error(\"encryptionMasterKey must be a string\");\n    }\n\n    if (options.encryptionMasterKey.length !== 32) {\n      throw new Error(\"encryptionMasterKey must be 32 bytes long, but the string '\" + options.encryptionMasterKey + \"' is \" + options.encryptionMasterKey.length + \" bytes long\");\n    }\n\n    this.encryptionMasterKey = Buffer.from(options.encryptionMasterKey);\n  } // Handle base64 encoded 32 byte key to encourage use of the full range of byte values\n\n\n  if (options.encryptionMasterKeyBase64 !== undefined) {\n    if (typeof options.encryptionMasterKeyBase64 !== \"string\") {\n      throw new Error(\"encryptionMasterKeyBase64 must be a string\");\n    }\n\n    if (!isBase64(options.encryptionMasterKeyBase64)) {\n      throw new Error(\"encryptionMasterKeyBase64 must be valid base64\");\n    }\n\n    const decodedKey = Buffer.from(options.encryptionMasterKeyBase64, \"base64\");\n\n    if (decodedKey.length !== 32) {\n      throw new Error(\"encryptionMasterKeyBase64 must decode to 32 bytes, but the string \" + options.encryptionMasterKeyBase64 + \"' decodes to \" + decodedKey.length + \" bytes\");\n    }\n\n    this.encryptionMasterKey = decodedKey;\n  }\n}\n\nConfig.prototype.prefixPath = function () {\n  throw \"NotImplementedError: #prefixPath should be implemented by subclasses\";\n};\n\nConfig.prototype.getBaseURL = function () {\n  const port = this.port ? \":\" + this.port : \"\";\n  return this.scheme + \"://\" + this.host + port;\n};\n\nmodule.exports = Config;","map":{"version":3,"names":["Token","require","isBase64","Config","options","useTLS","undefined","encrypted","Error","console","warn","scheme","port","appId","token","key","secret","timeout","agent","encryptionMasterKey","encryptionMasterKeyBase64","length","Buffer","from","decodedKey","prototype","prefixPath","getBaseURL","host","module","exports"],"sources":["/home/hhelsinki/sandbox-react/react-app/node_modules/pusher/lib/config.js"],"sourcesContent":["const Token = require(\"./token\")\nconst isBase64 = require(\"is-base64\")\n\nfunction Config(options) {\n  options = options || {}\n\n  let useTLS = false\n  if (options.useTLS !== undefined && options.encrypted !== undefined) {\n    throw new Error(\n      \"Cannot set both `useTLS` and `encrypted` configuration options\"\n    )\n  } else if (options.useTLS !== undefined) {\n    useTLS = options.useTLS\n  } else if (options.encrypted !== undefined) {\n    // `encrypted` deprecated in favor of `useTLS`\n    console.warn(\"`encrypted` option is deprecated in favor of `useTLS`\")\n    useTLS = options.encrypted\n  }\n  this.scheme = options.scheme || (useTLS ? \"https\" : \"http\")\n  this.port = options.port\n\n  this.appId = options.appId\n  this.token = new Token(options.key, options.secret)\n\n  this.timeout = options.timeout\n  this.agent = options.agent\n\n  // Handle deprecated raw 32 byte string as key\n  if (options.encryptionMasterKey !== undefined) {\n    if (options.encryptionMasterKeyBase64 !== undefined) {\n      throw new Error(\n        \"Do not specify both encryptionMasterKey and encryptionMasterKeyBase64. \" +\n          \"encryptionMasterKey is deprecated, please specify only encryptionMasterKeyBase64.\"\n      )\n    }\n    console.warn(\n      \"`encryptionMasterKey` option is deprecated in favor of `encryptionMasterKeyBase64`\"\n    )\n    if (typeof options.encryptionMasterKey !== \"string\") {\n      throw new Error(\"encryptionMasterKey must be a string\")\n    }\n    if (options.encryptionMasterKey.length !== 32) {\n      throw new Error(\n        \"encryptionMasterKey must be 32 bytes long, but the string '\" +\n          options.encryptionMasterKey +\n          \"' is \" +\n          options.encryptionMasterKey.length +\n          \" bytes long\"\n      )\n    }\n\n    this.encryptionMasterKey = Buffer.from(options.encryptionMasterKey)\n  }\n\n  // Handle base64 encoded 32 byte key to encourage use of the full range of byte values\n  if (options.encryptionMasterKeyBase64 !== undefined) {\n    if (typeof options.encryptionMasterKeyBase64 !== \"string\") {\n      throw new Error(\"encryptionMasterKeyBase64 must be a string\")\n    }\n    if (!isBase64(options.encryptionMasterKeyBase64)) {\n      throw new Error(\"encryptionMasterKeyBase64 must be valid base64\")\n    }\n\n    const decodedKey = Buffer.from(options.encryptionMasterKeyBase64, \"base64\")\n    if (decodedKey.length !== 32) {\n      throw new Error(\n        \"encryptionMasterKeyBase64 must decode to 32 bytes, but the string \" +\n          options.encryptionMasterKeyBase64 +\n          \"' decodes to \" +\n          decodedKey.length +\n          \" bytes\"\n      )\n    }\n\n    this.encryptionMasterKey = decodedKey\n  }\n}\n\nConfig.prototype.prefixPath = function () {\n  throw \"NotImplementedError: #prefixPath should be implemented by subclasses\"\n}\n\nConfig.prototype.getBaseURL = function () {\n  const port = this.port ? \":\" + this.port : \"\"\n  return this.scheme + \"://\" + this.host + port\n}\n\nmodule.exports = Config\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}