{"ast":null,"code":"var _jsxFileName = \"/home/hhelsinki/sandbox-react/react-app/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport jwt_decode from 'jwt-decode';\nimport { BrowserRouter as Router, Routes, Route, useNavigate, Navigate } from 'react-router-dom';\nimport { GoogleLogin, GoogleOAuthProvider } from \"@react-oauth/google\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const ggClientId = '412920764604-j8act2t26db6ci1jq74bdj3fd7ju64bd.apps.googleusercontent.com';\n  let navigate = useNavigate();\n\n  const handleLogin = async credentialResponse => {\n    console.log(credentialResponse);\n    var obj = jwt_decode(credentialResponse.credential);\n    var data = JSON.stringify(obj);\n    console.log(obj.jti);\n    console.log(data); //117204725635272455725\n\n    const myData = {\n      \"token\": \"frontend token\"\n    };\n    const config = {\n      method: 'POST',\n      url: 'http://localhost:3001/api/google-login',\n      data: {\n        credentialResponse\n      }\n    };\n    await axios(config).then(res => {\n      console.log(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n      clientId: ggClientId,\n      children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        login_uri: \"http://localhost:3001/api/google-login\",\n        onSuccess: handleLogin,\n        onError: () => {\n          console.log('Login Failed');\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","jwt_decode","BrowserRouter","Router","Routes","Route","useNavigate","Navigate","GoogleLogin","GoogleOAuthProvider","axios","Login","ggClientId","navigate","handleLogin","credentialResponse","console","log","obj","credential","data","JSON","stringify","jti","myData","config","method","url","then","res","catch","err"],"sources":["/home/hhelsinki/sandbox-react/react-app/src/components/Login.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport jwt_decode from 'jwt-decode';\nimport { BrowserRouter as Router, Routes, Route, useNavigate, Navigate } from 'react-router-dom';\nimport { GoogleLogin, GoogleOAuthProvider } from \"@react-oauth/google\";\nimport axios from \"axios\";\n\nfunction Login() {\n    const ggClientId = '412920764604-j8act2t26db6ci1jq74bdj3fd7ju64bd.apps.googleusercontent.com';\n    let navigate = useNavigate();\n\n    const handleLogin = async (credentialResponse) => {\n        console.log(credentialResponse);\n        var obj = jwt_decode(credentialResponse.credential);\n        var data = JSON.stringify(obj);\n        console.log(obj.jti);\n        console.log(data);\n        //117204725635272455725\n\n        const myData = {\n            \"token\": \"frontend token\" \n        }\n        const config = {\n            method: 'POST',\n            url: 'http://localhost:3001/api/google-login',\n            data: {\n                credentialResponse\n            }\n        }\n        await axios(config)\n        .then((res) => {\n            console.log(res.data)\n        })\n        .catch((err) => console.log(err))\n    }\n\n    useEffect(() => {\n\n    }, []);\n\n    return (\n        <div>\n            <GoogleOAuthProvider clientId={ggClientId}>\n                <GoogleLogin\n                    login_uri=\"http://localhost:3001/api/google-login\"\n                    onSuccess={handleLogin}\n                    onError={() => {\n                        console.log('Login Failed');\n                    }}\n\n                />\n            </GoogleOAuthProvider>\n\n        </div>\n    );\n}\n\nexport default Login;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,WAAjD,EAA8DC,QAA9D,QAA8E,kBAA9E;AACA,SAASC,WAAT,EAAsBC,mBAAtB,QAAiD,qBAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,KAAT,GAAiB;EAAA;;EACb,MAAMC,UAAU,GAAG,0EAAnB;EACA,IAAIC,QAAQ,GAAGP,WAAW,EAA1B;;EAEA,MAAMQ,WAAW,GAAG,MAAOC,kBAAP,IAA8B;IAC9CC,OAAO,CAACC,GAAR,CAAYF,kBAAZ;IACA,IAAIG,GAAG,GAAGjB,UAAU,CAACc,kBAAkB,CAACI,UAApB,CAApB;IACA,IAAIC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAAX;IACAF,OAAO,CAACC,GAAR,CAAYC,GAAG,CAACK,GAAhB;IACAP,OAAO,CAACC,GAAR,CAAYG,IAAZ,EAL8C,CAM9C;;IAEA,MAAMI,MAAM,GAAG;MACX,SAAS;IADE,CAAf;IAGA,MAAMC,MAAM,GAAG;MACXC,MAAM,EAAE,MADG;MAEXC,GAAG,EAAE,wCAFM;MAGXP,IAAI,EAAE;QACFL;MADE;IAHK,CAAf;IAOA,MAAML,KAAK,CAACe,MAAD,CAAL,CACLG,IADK,CACCC,GAAD,IAAS;MACXb,OAAO,CAACC,GAAR,CAAYY,GAAG,CAACT,IAAhB;IACH,CAHK,EAILU,KAJK,CAIEC,GAAD,IAASf,OAAO,CAACC,GAAR,CAAYc,GAAZ,CAJV,CAAN;EAKH,CAvBD;;EAyBAhC,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACI;IAAA,uBACI,QAAC,mBAAD;MAAqB,QAAQ,EAAEa,UAA/B;MAAA,uBACI,QAAC,WAAD;QACI,SAAS,EAAC,wCADd;QAEI,SAAS,EAAEE,WAFf;QAGI,OAAO,EAAE,MAAM;UACXE,OAAO,CAACC,GAAR,CAAY,cAAZ;QACH;MALL;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAeH;;GAhDQN,K;UAEUL,W;;;KAFVK,K;AAkDT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}