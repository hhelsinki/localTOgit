{"ast":null,"code":"const crypto = require(\"crypto\");\n\nfunction toOrderedArray(map) {\n  return Object.keys(map).map(function (key) {\n    return [key, map[key]];\n  }).sort(function (a, b) {\n    if (a[0] < b[0]) {\n      return -1;\n    }\n\n    if (a[0] > b[0]) {\n      return 1;\n    }\n\n    return 0;\n  }).map(function (pair) {\n    return pair[0] + \"=\" + pair[1];\n  });\n}\n\nfunction getMD5(body) {\n  return crypto.createHash(\"md5\").update(body, \"utf8\").digest(\"hex\");\n}\n\nfunction secureCompare(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  let result = 0;\n\n  for (const i in a) {\n    result |= a.charCodeAt(i) ^ b.charCodeAt(i);\n  }\n\n  return result === 0;\n}\n\nfunction isEncryptedChannel(channel) {\n  return channel.startsWith(\"private-encrypted-\");\n}\n\nexports.toOrderedArray = toOrderedArray;\nexports.getMD5 = getMD5;\nexports.secureCompare = secureCompare;\nexports.isEncryptedChannel = isEncryptedChannel;","map":{"version":3,"names":["crypto","require","toOrderedArray","map","Object","keys","key","sort","a","b","pair","getMD5","body","createHash","update","digest","secureCompare","length","result","i","charCodeAt","isEncryptedChannel","channel","startsWith","exports"],"sources":["/home/hhelsinki/sandbox-react/react-app/node_modules/pusher/lib/util.js"],"sourcesContent":["const crypto = require(\"crypto\")\n\nfunction toOrderedArray(map) {\n  return Object.keys(map)\n    .map(function (key) {\n      return [key, map[key]]\n    })\n    .sort(function (a, b) {\n      if (a[0] < b[0]) {\n        return -1\n      }\n      if (a[0] > b[0]) {\n        return 1\n      }\n      return 0\n    })\n    .map(function (pair) {\n      return pair[0] + \"=\" + pair[1]\n    })\n}\n\nfunction getMD5(body) {\n  return crypto.createHash(\"md5\").update(body, \"utf8\").digest(\"hex\")\n}\n\nfunction secureCompare(a, b) {\n  if (a.length !== b.length) {\n    return false\n  }\n  let result = 0\n  for (const i in a) {\n    result |= a.charCodeAt(i) ^ b.charCodeAt(i)\n  }\n  return result === 0\n}\n\nfunction isEncryptedChannel(channel) {\n  return channel.startsWith(\"private-encrypted-\")\n}\n\nexports.toOrderedArray = toOrderedArray\nexports.getMD5 = getMD5\nexports.secureCompare = secureCompare\nexports.isEncryptedChannel = isEncryptedChannel\n"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AAEA,SAASC,cAAT,CAAwBC,GAAxB,EAA6B;EAC3B,OAAOC,MAAM,CAACC,IAAP,CAAYF,GAAZ,EACJA,GADI,CACA,UAAUG,GAAV,EAAe;IAClB,OAAO,CAACA,GAAD,EAAMH,GAAG,CAACG,GAAD,CAAT,CAAP;EACD,CAHI,EAIJC,IAJI,CAIC,UAAUC,CAAV,EAAaC,CAAb,EAAgB;IACpB,IAAID,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAAZ,EAAiB;MACf,OAAO,CAAC,CAAR;IACD;;IACD,IAAID,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAAZ,EAAiB;MACf,OAAO,CAAP;IACD;;IACD,OAAO,CAAP;EACD,CAZI,EAaJN,GAbI,CAaA,UAAUO,IAAV,EAAgB;IACnB,OAAOA,IAAI,CAAC,CAAD,CAAJ,GAAU,GAAV,GAAgBA,IAAI,CAAC,CAAD,CAA3B;EACD,CAfI,CAAP;AAgBD;;AAED,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;EACpB,OAAOZ,MAAM,CAACa,UAAP,CAAkB,KAAlB,EAAyBC,MAAzB,CAAgCF,IAAhC,EAAsC,MAAtC,EAA8CG,MAA9C,CAAqD,KAArD,CAAP;AACD;;AAED,SAASC,aAAT,CAAuBR,CAAvB,EAA0BC,CAA1B,EAA6B;EAC3B,IAAID,CAAC,CAACS,MAAF,KAAaR,CAAC,CAACQ,MAAnB,EAA2B;IACzB,OAAO,KAAP;EACD;;EACD,IAAIC,MAAM,GAAG,CAAb;;EACA,KAAK,MAAMC,CAAX,IAAgBX,CAAhB,EAAmB;IACjBU,MAAM,IAAIV,CAAC,CAACY,UAAF,CAAaD,CAAb,IAAkBV,CAAC,CAACW,UAAF,CAAaD,CAAb,CAA5B;EACD;;EACD,OAAOD,MAAM,KAAK,CAAlB;AACD;;AAED,SAASG,kBAAT,CAA4BC,OAA5B,EAAqC;EACnC,OAAOA,OAAO,CAACC,UAAR,CAAmB,oBAAnB,CAAP;AACD;;AAEDC,OAAO,CAACtB,cAAR,GAAyBA,cAAzB;AACAsB,OAAO,CAACb,MAAR,GAAiBA,MAAjB;AACAa,OAAO,CAACR,aAAR,GAAwBA,aAAxB;AACAQ,OAAO,CAACH,kBAAR,GAA6BA,kBAA7B"},"metadata":{},"sourceType":"script"}