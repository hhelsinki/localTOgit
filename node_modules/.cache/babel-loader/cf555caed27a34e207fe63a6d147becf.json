{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = SideEffect;\n\nvar _interop_require_wildcard = require(\"@swc/helpers/lib/_interop_require_wildcard.js\").default;\n\nvar _react = _interop_require_wildcard(require(\"react\"));\n\nfunction SideEffect(props) {\n  const {\n    headManager,\n    reduceComponentsToState\n  } = props;\n\n  function emitChange() {\n    if (headManager && headManager.mountedInstances) {\n      const headElements = _react.Children.toArray(Array.from(headManager.mountedInstances).filter(Boolean));\n\n      headManager.updateHead(reduceComponentsToState(headElements, props));\n    }\n  }\n\n  if (isServer) {\n    var ref;\n    headManager == null ? void 0 : (ref = headManager.mountedInstances) == null ? void 0 : ref.add(props.children);\n    emitChange();\n  }\n\n  useClientOnlyLayoutEffect(() => {\n    var ref1;\n    headManager == null ? void 0 : (ref1 = headManager.mountedInstances) == null ? void 0 : ref1.add(props.children);\n    return () => {\n      var ref;\n      headManager == null ? void 0 : (ref = headManager.mountedInstances) == null ? void 0 : ref.delete(props.children);\n    };\n  }); // We need to call `updateHead` method whenever the `SideEffect` is trigger in all\n  // life-cycles: mount, update, unmount. However, if there are multiple `SideEffect`s\n  // being rendered, we only trigger the method from the last one.\n  // This is ensured by keeping the last unflushed `updateHead` in the `_pendingUpdate`\n  // singleton in the layout effect pass, and actually trigger it in the effect pass.\n\n  useClientOnlyLayoutEffect(() => {\n    if (headManager) {\n      headManager._pendingUpdate = emitChange;\n    }\n\n    return () => {\n      if (headManager) {\n        headManager._pendingUpdate = emitChange;\n      }\n    };\n  });\n  useClientOnlyEffect(() => {\n    if (headManager && headManager._pendingUpdate) {\n      headManager._pendingUpdate();\n\n      headManager._pendingUpdate = null;\n    }\n\n    return () => {\n      if (headManager && headManager._pendingUpdate) {\n        headManager._pendingUpdate();\n\n        headManager._pendingUpdate = null;\n      }\n    };\n  });\n  return null;\n}\n\nconst isServer = typeof window === 'undefined';\nconst useClientOnlyLayoutEffect = isServer ? () => {} : _react.useLayoutEffect;\nconst useClientOnlyEffect = isServer ? () => {} : _react.useEffect;","map":{"version":3,"mappings":"AAAA;;;;;kBAmBwBA;;;;AAnBoC,UAAO,qCAAP,OAAO,EAAP;;AAmB7C,SAASA,UAAT,CAAoBC,KAApB,EAA4C;EACzD,MAAM;IAAEC,WAAF;IAAeC;EAAf,IAA2CF,KAAjD;;EAEA,SAASG,UAAT,GAAsB;IACpB,IAAIF,WAAW,IAAIA,WAAW,CAACG,gBAA/B,EAAiD;MAC/C,MAAMC,YAAY,GAAGC,MAAQ,SAARA,CAASC,OAATD,CACnBE,KAAK,CAACC,IAAND,CAAWP,WAAW,CAACG,gBAAvBI,EAAyDE,MAAzDF,CAAgEG,OAAhEH,CADmBF,CAArB;;MAGAL,WAAW,CAACW,UAAZX,CAAuBC,uBAAuB,CAACG,YAAD,EAAeL,KAAf,CAA9CC;IACD;EACF;;EAED,IAAIY,QAAJ,EAAc;QACZZ;IAAAA,WAAW,QAAXA,gBAA6B,GAA7BA,WAAW,CAAEG,gBAAbH,KAA6B,IAA7BA,eAA6B,CAAEa,GAA/Bb,CAAmCD,KAAK,CAACe,QAAzCd;IACAE,UAAU;EACX;;EAEDa,yBAAyB,CAAC,MAAM;QAC9Bf;IAAAA,WAAW,QAAXA,iBAA6B,GAA7BA,WAAW,CAAEG,gBAAbH,KAA6B,IAA7BA,gBAA6B,CAAEa,GAA/Bb,CAAmCD,KAAK,CAACe,QAAzCd;IACA,OAAO,MAAM;UACXA;MAAAA,WAAW,QAAXA,gBAA6B,GAA7BA,WAAW,CAAEG,gBAAbH,KAA6B,IAA7BA,eAA6B,CAAEgB,MAA/BhB,CAAsCD,KAAK,CAACe,QAA5Cd;IACD,CAFD;EAGD,CALwB,CAAzBe,CAjByD,CAwBzD;EACA;EACA;EACA;EACA;;EACAA,yBAAyB,CAAC,MAAM;IAC9B,IAAIf,WAAJ,EAAiB;MACfA,WAAW,CAACiB,cAAZjB,GAA6BE,UAA7BF;IACD;;IACD,OAAO,MAAM;MACX,IAAIA,WAAJ,EAAiB;QACfA,WAAW,CAACiB,cAAZjB,GAA6BE,UAA7BF;MACD;IACF,CAJD;EAKD,CATwB,CAAzBe;EAWAG,mBAAmB,CAAC,MAAM;IACxB,IAAIlB,WAAW,IAAIA,WAAW,CAACiB,cAA/B,EAA+C;MAC7CjB,WAAW,CAACiB,cAAZjB;;MACAA,WAAW,CAACiB,cAAZjB,GAA6B,IAA7BA;IACD;;IACD,OAAO,MAAM;MACX,IAAIA,WAAW,IAAIA,WAAW,CAACiB,cAA/B,EAA+C;QAC7CjB,WAAW,CAACiB,cAAZjB;;QACAA,WAAW,CAACiB,cAAZjB,GAA6B,IAA7BA;MACD;IACF,CALD;EAMD,CAXkB,CAAnBkB;EAaA,OAAO,IAAP;AACD;;AA1DD,MAAMN,QAAQ,GAAG,OAAOO,MAAP,KAAkB,WAAnC;AACA,MAAMJ,yBAAyB,GAAGH,QAAQ,GAAG,MAAM,CAAE,CAAX,GAAcQ,MAAe,gBAAvE;AACA,MAAMF,mBAAmB,GAAGN,QAAQ,GAAG,MAAM,CAAE,CAAX,GAAcS,MAAS,UAA3D","names":["SideEffect","props","headManager","reduceComponentsToState","emitChange","mountedInstances","headElements","Children","toArray","Array","from","filter","Boolean","updateHead","isServer","add","children","useClientOnlyLayoutEffect","delete","_pendingUpdate","useClientOnlyEffect","window","useLayoutEffect","useEffect"],"sources":["../../../shared/lib/side-effect.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}